import { Link, useLocation } from "react-router-dom";
import styles from "./NavContainer.module.css";

function StoresNavBg({ hover, setTab, tab }) {
  const location = useLocation();
  return (
    <>
      <div className={styles.navicons}>
        <div
          className={` mt-2 ${location.pathname === "/" ? styles.active : ""}`}
          onClick={() => setTab("home")}
        >
          <Link to="/">
            <svg
              width="34"
              height="35"
              viewBox="0 0 34 35"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2 15.8303C2 14.8731 2 14.3945 2.12338 13.9537C2.23267 13.5632 2.41228 13.196 2.65338 12.87C2.92556 12.502 3.30337 12.2082 4.05898 11.6205L15.3628 2.82859C15.9484 2.37317 16.2411 2.14546 16.5644 2.05793C16.8497 1.98069 17.1503 1.98069 17.4356 2.05793C17.7589 2.14546 18.0516 2.37317 18.6372 2.82859L29.941 11.6205C30.6966 12.2082 31.0744 12.502 31.3466 12.87C31.5877 13.196 31.7673 13.5632 31.8766 13.9537C32 14.3945 32 14.8731 32 15.8303V27.8886C32 29.7554 32 30.6888 31.6367 31.4019C31.3171 32.0291 30.8072 32.539 30.18 32.8586C29.4669 33.2219 28.5335 33.2219 26.6667 33.2219H7.33333C5.46649 33.2219 4.53307 33.2219 3.82003 32.8586C3.19282 32.539 2.68289 32.0291 2.36331 31.4019C2 30.6888 2 29.7554 2 27.8886V15.8303Z"
                stroke="black"
                stroke-width="3.33333"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Home</p>}
          </Link>
        </div>
        <div
          className={` mt-2 ${location.pathname.includes("attendance") ? styles.active : ""}`}
          onClick={() => setTab("attendance")}
        >
          <Link to="/attendance">
            <svg
              width="38"
              height="38"
              viewBox="0 0 38 38"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M33.25 15.8334H4.75M33.25 19.7917V13.9334C33.25 11.2731 33.25 9.94297 32.7323 8.9269C32.2769 8.03313 31.5503 7.30647 30.6565 6.85107C29.6403 6.33335 28.3103 6.33335 25.65 6.33335H12.35C9.68975 6.33335 8.35962 6.33335 7.34355 6.85107C6.44977 7.30647 5.72312 8.03313 5.26772 8.9269C4.75 9.94297 4.75 11.2731 4.75 13.9334V27.2334C4.75 29.8937 4.75 31.2237 5.26772 32.2399C5.72312 33.1336 6.44977 33.8602 7.34355 34.3156C8.35962 34.8334 9.68975 34.8334 12.35 34.8334H19M25.3333 3.16669V9.50002M12.6667 3.16669V9.50002M22.9583 30.0834L26.125 33.25L33.25 26.125"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Attendance</p>}
          </Link>
        </div>
        <div
          className={` mt-2 ${location.pathname.includes("leave") ? styles.active : ""}`}
          onClick={() => setTab("leave")}
        >
          <Link to="/leave">
            <svg
              width="34"
              height="34"
              viewBox="0 0 34 34"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_2024_66)">
                <path
                  d="M13.6805 0C14.3703 0 15.0601 0.258982 15.7211 0.460335C17.8073 1.15361 19.5636 2.59421 20.6527 4.50521C21.7417 6.41621 22.0864 8.6626 21.6206 10.8126C21.1548 12.9626 19.9113 14.8644 18.1293 16.1523C16.3472 17.4402 14.1523 18.0234 11.9667 17.7896C9.78099 17.5558 7.75879 16.5217 6.2889 14.8859C4.81901 13.2502 4.00522 11.1282 4.00391 8.92826C4.0026 6.72828 4.81395 4.60563 6.28189 2.96813C7.74982 1.33062 9.77074 0.293978 11.9561 0.0575858H12.2147L13.6805 0ZM19.2562 8.97461C19.2618 7.72179 18.8958 6.49544 18.2045 5.45099C17.5132 4.40653 16.5278 3.59109 15.3729 3.1077C14.2181 2.62432 12.9458 2.49476 11.7174 2.73568C10.489 2.9766 9.35966 3.5771 8.47251 4.46097C7.58536 5.34483 6.98042 6.47235 6.73411 7.7007C6.4878 8.92904 6.61128 10.2029 7.08898 11.3609C7.56669 12.5189 8.37707 13.509 9.41748 14.2056C10.4579 14.9022 11.6814 15.2741 12.9332 15.2741C13.7622 15.2779 14.5839 15.1178 15.3508 14.8029C16.1178 14.488 16.815 14.0246 17.4025 13.4393C17.99 12.8539 18.4562 12.1581 18.7743 11.392C19.0924 10.6258 19.2562 9.80429 19.2562 8.97461Z"
                  fill="black"
                />
                <path
                  d="M34.0001 25.7157C33.8911 26.4152 33.7376 27.107 33.5403 27.7869C32.8453 29.8807 31.4017 31.6435 29.4869 32.7368C27.5721 33.8301 25.321 34.1766 23.1665 33.7098C21.0119 33.243 19.1058 31.9958 17.8143 30.2078C16.5227 28.4197 15.9369 26.2171 16.1694 24.0231C16.4019 21.829 17.4362 19.7983 19.0738 18.3212C20.7113 16.8441 22.8367 16.0249 25.0411 16.0208C27.2456 16.0167 29.3739 16.828 31.0169 18.2989C32.66 19.7699 33.7019 21.7967 33.9426 23.9899C33.9291 24.0757 33.9291 24.1629 33.9426 24.2487L34.0001 25.7157ZM25.0331 31.2961C26.2848 31.3018 27.5101 30.9355 28.5537 30.2436C29.5973 29.5517 30.4122 28.5654 30.8952 27.4096C31.3782 26.2538 31.5074 24.9804 31.2667 23.751C31.026 22.5215 30.426 21.3912 29.5429 20.5033C28.6598 19.6154 27.5332 19.01 26.3059 18.7635C25.0786 18.5169 23.8058 18.6405 22.6488 19.1186C21.4918 19.5968 20.5025 20.4078 19.8065 21.4491C19.1104 22.4904 18.7389 23.715 18.7389 24.9678C18.7389 26.6412 19.401 28.2465 20.5806 29.4325C21.7602 30.6184 23.3611 31.2885 25.0331 31.2961Z"
                  fill="black"
                />
                <path
                  d="M5.47729e-05 32.3316C0.165637 29.2135 1.50074 26.2728 3.73856 24.097C5.97638 21.9213 8.95213 20.671 12.0711 20.5957C12.263 20.5675 12.4588 20.5808 12.6451 20.635C12.8313 20.6893 13.0038 20.7831 13.1506 20.91C13.2974 21.0369 13.4151 21.1941 13.4958 21.3707C13.5766 21.5472 13.6185 21.739 13.6185 21.9332C13.6185 22.1273 13.5766 22.3193 13.4958 22.4959C13.4151 22.6724 13.2974 22.8295 13.1506 22.9564C13.0038 23.0833 12.8313 23.1771 12.6451 23.2313C12.4588 23.2856 12.263 23.2991 12.0711 23.2708C9.98782 23.3018 7.97078 24.0081 6.32282 25.284C4.67486 26.56 3.48494 28.3365 2.93164 30.3469C2.75584 31.122 2.65007 31.9115 2.61554 32.7056C2.60347 33.0382 2.47178 33.3552 2.2447 33.5983C2.01763 33.8415 1.71046 33.9944 1.37972 34.0288C1.05648 34.0499 0.736399 33.954 0.477893 33.7586C0.219388 33.5633 0.0395216 33.2815 -0.0287138 32.9646C-0.035633 32.7532 -0.0259954 32.5415 5.47729e-05 32.3316Z"
                  fill="black"
                />
                <path
                  d="M26.355 23.6447H27.2746C27.4516 23.6368 27.6286 23.6653 27.7941 23.7286C27.9597 23.7919 28.1104 23.8886 28.2371 24.0127C28.3637 24.1368 28.4636 24.2855 28.5304 24.4498C28.5972 24.6141 28.6296 24.7904 28.6255 24.9678C28.6179 25.3213 28.4722 25.6579 28.2197 25.9053C27.9672 26.1526 27.6279 26.2911 27.2746 26.291H25.0617C24.8832 26.2949 24.7058 26.2626 24.5401 26.196C24.3745 26.1295 24.224 26.03 24.0977 25.9037C23.9715 25.7774 23.8722 25.6269 23.8057 25.4611C23.7392 25.2953 23.7068 25.1176 23.7108 24.939V22.2639C23.7108 21.9129 23.8502 21.5764 24.0981 21.3283C24.346 21.0801 24.6823 20.9408 25.0329 20.9408C25.3835 20.9408 25.7198 21.0801 25.9677 21.3283C26.2156 21.5764 26.355 21.9129 26.355 22.2639C26.3838 22.7241 26.355 23.1557 26.355 23.6447Z"
                  fill="black"
                />
              </g>
              <defs>
                <clipPath id="clip0_2024_66">
                  <rect width="34" height="34" fill="white" />
                </clipPath>
              </defs>
            </svg>

            {hover && <p>Leave Management</p>}
          </Link>
        </div>
        <div
          className={` mt-2 ${location.pathname.includes("stores") ? styles.active : ""}`}
          onClick={() => setTab("stores")}
        >
          <Link to="/stores">
            <svg
              width="50"
              height="37"
              viewBox="0 0 50 51"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_2025_83)">
                <path
                  d="M39.1705 22.8821C38.558 23.5225 37.8242 24.0317 37.0127 24.3796C36.2012 24.7274 35.3285 24.9067 34.4469 24.9067C33.5653 24.9067 32.6928 24.7274 31.8813 24.3796C31.0698 24.0317 30.336 23.5225 29.7235 22.8821C29.129 23.5243 28.4092 24.0351 27.6094 24.3822C26.8097 24.7293 25.9473 24.9051 25.0769 24.8987C24.1952 24.9042 23.3216 24.7282 22.5095 24.3815C21.6973 24.0347 20.9637 23.5247 20.3533 22.8821C19.7434 23.5147 19.0152 24.0185 18.211 24.3646C17.4067 24.7108 16.5424 24.8924 15.6682 24.8987C14.7868 24.9019 13.9139 24.725 13.1021 24.3784C12.2903 24.0318 11.5564 23.5229 10.9447 22.8821L10.5223 23.2698C9.8702 23.8507 9.1091 24.2934 8.28433 24.5715C7.45956 24.8496 6.5879 24.9575 5.72104 24.8887C4.85419 24.82 4.00984 24.5762 3.23815 24.1715C2.46646 23.7668 1.78317 23.2095 1.22884 22.533C0.623367 21.7701 0.223863 20.862 0.0690796 19.8969C-0.085704 18.9318 0.00958161 17.9427 0.34566 17.0258C0.921697 15.0478 1.7281 13.1474 2.45775 11.1695C3.32214 8.64309 4.38806 6.19164 5.6451 3.83939C6.12422 2.98474 6.71884 2.20166 7.4117 1.51249C8.53724 0.49643 10.0128 -0.0328025 11.5208 0.0387051H25.0384C25.2686 0.0335386 25.4973 0.0747487 25.7115 0.16014C25.9256 0.24553 26.1207 0.373227 26.2852 0.535805C26.4498 0.698384 26.5805 0.892685 26.6698 1.107C26.759 1.32131 26.8049 1.55151 26.8049 1.784C26.8053 2.2543 26.6257 2.70646 26.3036 3.04616C25.9816 3.38586 25.5421 3.58669 25.0769 3.6067H11.5976C11.0416 3.58702 10.4919 3.73047 10.0148 4.01953C9.53779 4.30859 9.15377 4.73083 8.90933 5.23553C7.71642 7.44553 6.71426 9.75532 5.91395 12.1391C5.1459 14.0007 4.4547 16.0173 3.80186 17.8401C3.55918 18.2968 3.48017 18.8242 3.57813 19.333C3.6761 19.8419 3.94497 20.301 4.33943 20.6326C4.74798 20.9953 5.25101 21.2319 5.78878 21.3143C6.32655 21.3968 6.8765 21.3218 7.37326 21.098C7.90279 20.8942 8.35871 20.5329 8.68092 20.0621C9.00313 19.5913 9.17652 19.0331 9.17818 18.4608C9.20844 18.1113 9.29947 17.7699 9.44702 17.4524C9.6381 17.1361 9.92186 16.8877 10.2591 16.7417C10.5963 16.5958 10.9701 16.5594 11.3287 16.6378C11.7215 16.7262 12.0728 16.9475 12.3242 17.2649C12.5756 17.5822 12.7121 17.9767 12.7113 18.3831C12.7145 19.1056 12.9769 19.8025 13.4501 20.3445C13.9232 20.8865 14.5748 21.2369 15.2842 21.3307C15.6679 21.3793 16.0573 21.3504 16.4299 21.2457C16.8024 21.141 17.1508 20.9627 17.4545 20.7209C17.7582 20.4791 18.0112 20.1789 18.199 19.8375C18.3868 19.4961 18.5056 19.1204 18.5484 18.7323C18.5484 18.5384 18.5484 18.3443 18.5484 18.1504C18.5484 17.6876 18.7305 17.2437 19.0546 16.9164C19.3786 16.5891 19.8182 16.4051 20.2765 16.4051C20.7349 16.4051 21.1743 16.5891 21.4984 16.9164C21.8225 17.2437 22.0046 17.6876 22.0046 18.1504C22.0239 18.8968 22.2796 19.6173 22.7342 20.2061C23.1015 20.6564 23.596 20.9829 24.1517 21.1423C24.7074 21.3016 25.298 21.2862 25.8448 21.098C26.4158 20.9249 26.9206 20.5793 27.2914 20.1078C27.6621 19.6363 27.881 19.0616 27.9186 18.4608C27.8997 18.2284 27.8997 17.995 27.9186 17.7627C28.0205 17.3907 28.2416 17.0633 28.5473 16.8317C28.8531 16.6001 29.2262 16.4774 29.6083 16.4828C29.9874 16.4899 30.3546 16.6173 30.6579 16.8471C30.9612 17.0768 31.1852 17.3972 31.298 17.7627C31.3141 17.9433 31.3141 18.1249 31.298 18.3055C31.308 19.0841 31.6187 19.828 32.1639 20.3786C32.7091 20.9292 33.4456 21.243 34.2165 21.253C34.6064 21.2532 34.9923 21.1745 35.3515 21.0215C35.7107 20.8686 36.036 20.6445 36.308 20.3625C36.58 20.0805 36.7934 19.7465 36.9355 19.3799C37.0775 19.0133 37.1454 18.6216 37.1352 18.2281C37.1512 17.7899 37.3232 17.3721 37.6194 17.0516C37.9157 16.731 38.3164 16.5291 38.7481 16.4828C39.1747 16.4527 39.5979 16.5765 39.9426 16.8322C40.2872 17.0879 40.5308 17.4588 40.6298 17.8789C40.6475 18.0595 40.6475 18.2414 40.6298 18.4219C40.6568 18.963 40.833 19.4856 41.1383 19.931C41.4436 20.3764 41.866 20.7269 42.358 20.9429C42.8289 21.181 43.3574 21.2782 43.8813 21.2232C44.4051 21.1682 44.9025 20.9634 45.3149 20.6326C45.6631 20.4333 45.9377 20.125 46.0971 19.7542C46.2564 19.3833 46.2919 18.97 46.1982 18.577C46.0008 17.6562 45.7442 16.7495 45.4301 15.8623C44.4316 13.2251 43.3948 10.6266 42.358 8.10569C41.9355 7.09733 41.3979 6.16653 40.8986 5.19695C40.6575 4.6729 40.2633 4.23591 39.769 3.94473C39.2747 3.65355 38.7041 3.52195 38.1337 3.56788H34.2934C34.0111 3.57295 33.7314 3.51118 33.477 3.38727C33.2227 3.26335 33.0008 3.08076 32.8289 2.85442C32.6571 2.62808 32.5402 2.36415 32.4878 2.08392C32.4353 1.80368 32.4487 1.51504 32.5268 1.24098C32.5956 0.908582 32.7732 0.60926 33.031 0.391173C33.2887 0.173085 33.6117 0.0489307 33.9478 0.0387051C35.8411 -0.0580677 37.738 -0.0580677 39.6313 0.0387051C40.4943 0.131716 41.3212 0.438793 42.0381 0.932775C42.7551 1.42676 43.3398 2.09222 43.7404 2.86981C44.4897 4.12339 45.1691 5.41817 45.7757 6.74814C46.9662 9.69566 48.0799 12.6433 49.1936 15.5908C49.8425 17.1086 49.9643 18.8034 49.5392 20.3999C49.0766 21.7115 48.1957 22.8307 47.0349 23.5818C45.8741 24.333 44.4991 24.6735 43.1259 24.5498C41.6645 24.4365 40.2778 23.8519 39.1705 22.8821Z"
                  fill="black"
                />
                <path
                  d="M43.2411 47.4317H46.1982C46.6227 47.4374 47.0311 47.5973 47.3484 47.8822C47.6658 48.1671 47.8709 48.558 47.9262 48.9832C47.9896 49.3918 47.9038 49.8098 47.6848 50.1594C47.4658 50.509 47.1285 50.7663 46.7357 50.8835C46.4182 50.94 46.0933 50.94 45.7757 50.8835H22.7342C22.3022 50.8699 21.8901 50.6969 21.576 50.3971C21.2618 50.0972 21.0673 49.6914 21.0295 49.2566C20.9916 48.8217 21.113 48.3881 21.3705 48.0375C21.6281 47.6869 22.004 47.4439 22.427 47.3543H39.6313V32.9657C39.6123 32.6945 39.6123 32.4223 39.6313 32.1511C39.7301 31.7413 39.9694 31.3801 40.3069 31.1316C40.6443 30.8831 41.0581 30.7635 41.4746 30.7938C41.894 30.8377 42.2849 31.0286 42.5795 31.3333C42.8742 31.6379 43.0538 32.037 43.0875 32.4615V47.3929L43.2411 47.4317Z"
                  fill="black"
                />
                <path
                  d="M6.83568 47.3546V32.9659C6.79613 32.6699 6.79613 32.3699 6.83568 32.0739C6.94503 31.6988 7.17329 31.3704 7.48553 31.1392C7.79776 30.9079 8.1766 30.7866 8.56372 30.794C8.94096 30.8117 9.30325 30.9485 9.59949 31.1851C9.89572 31.4216 10.1109 31.7461 10.215 32.1128C10.2515 32.409 10.2515 32.7085 10.215 33.0047V47.3931H13.0569C13.509 47.3718 13.9513 47.5307 14.2888 47.8353C14.6263 48.1399 14.8321 48.5661 14.8618 49.0222C14.8962 49.2717 14.8754 49.5258 14.8011 49.7662C14.7267 50.0066 14.6005 50.2275 14.4317 50.4129C14.2628 50.5983 14.0554 50.7434 13.8244 50.8383C13.5933 50.9331 13.3442 50.9752 13.0952 50.9614H3.87862C3.63583 50.9833 3.39122 50.9531 3.1608 50.8728C2.93037 50.7925 2.71937 50.664 2.54165 50.4955C2.36394 50.327 2.22348 50.1224 2.1296 49.8952C2.03571 49.668 1.99054 49.4233 1.99693 49.1773C2.00183 48.9345 2.05471 48.6951 2.15245 48.4733C2.25019 48.2514 2.39086 48.0517 2.56615 47.8855C2.74144 47.7193 2.94783 47.5901 3.17322 47.5056C3.39861 47.4211 3.63841 47.3828 3.87862 47.3931H6.52839L6.83568 47.3546Z"
                  fill="black"
                />
              </g>
              <defs>
                <clipPath id="clip0_2025_83">
                  <rect width="50" height="51" fill="white" />
                </clipPath>
              </defs>
            </svg>

            {hover && <p>Stores</p>}
          </Link>
        </div>
        <div
          className={` mt-2 ${location.pathname.includes("department") ? styles.active : ""}`}
          onClick={() => setTab("department")}
        >
          <Link to="/department">
            <svg
              width="51"
              height="35"
              viewBox="0 0 51 51"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.5 36.125L8.5 35.7C8.5 32.1296 8.5 30.3446 9.19488 28.9807C9.80603 27.7812 10.7812 26.806 11.9808 26.1949C13.3446 25.5 15.1296 25.5 18.7 25.5L32.3 25.5C35.8703 25.5 37.6555 25.5 39.0192 26.1949C40.2187 26.806 41.194 27.7812 41.8052 28.9808C42.5 30.3446 42.5 32.1296 42.5 35.7L42.5 36.125M8.5 36.125C6.15273 36.125 4.25 38.0277 4.25 40.375C4.25 42.7223 6.15273 44.625 8.5 44.625C10.8473 44.625 12.75 42.7223 12.75 40.375C12.75 38.0277 10.8473 36.125 8.5 36.125ZM42.5 36.125C40.1528 36.125 38.25 38.0277 38.25 40.375C38.25 42.7223 40.1528 44.625 42.5 44.625C44.8472 44.625 46.75 42.7223 46.75 40.375C46.75 38.0277 44.8472 36.125 42.5 36.125ZM25.5 14.875L25.5 36.125M25.5 14.875C23.1527 14.875 21.25 12.9722 21.25 10.625C21.25 8.27779 23.1527 6.375 25.5 6.375C27.8473 6.375 29.75 8.27779 29.75 10.625C29.75 12.9722 27.8473 14.875 25.5 14.875ZM25.5 36.125C23.1527 36.125 21.25 38.0277 21.25 40.375C21.25 42.7223 23.1527 44.625 25.5 44.625C27.8473 44.625 29.75 42.7223 29.75 40.375C29.75 38.0277 27.8473 36.125 25.5 36.125Z"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Department</p>}
          </Link>
        </div>

        <div
          className={` mt-2 ${location.pathname.includes("indents") ? styles.active : ""}`}
          onClick={() => setTab("indents")}
        >
          <Link to="/indents">
            <svg
              width="31"
              height="31"
              viewBox="0 0 31 31"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M27.125 11.9478H15.5M27.125 5.16656H15.5M27.125 19.052H3.875M27.125 25.8333H3.875M5.52833 3.82323L10.5228 7.56906C10.8967 7.84951 11.0837 7.98973 11.1505 8.16164C11.2091 8.31221 11.2091 8.47926 11.1505 8.62983C11.0837 8.80173 10.8967 8.94195 10.5228 9.2224L5.52833 12.9683C4.99619 13.3673 4.73012 13.5669 4.50741 13.5622C4.3136 13.5582 4.13185 13.4674 4.01233 13.3147C3.875 13.1393 3.875 12.8067 3.875 12.1416V4.6499C3.875 3.98473 3.875 3.65213 4.01233 3.47674C4.13185 3.32412 4.3136 3.23323 4.50741 3.2292C4.73012 3.22458 4.99619 3.42413 5.52833 3.82323Z"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Indents</p>}
          </Link>
        </div>

        <div
          className={` mt-2 ${location.pathname.includes("contracts") ? styles.active : ""}`}
          onClick={() => setTab("contracts")}
        >
          <Link to="/contracts">
            <svg
              width="34"
              height="34"
              viewBox="0 0 34 34"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M28.3333 14.1667V9.63337C28.3333 7.25315 28.3333 6.06303 27.87 5.15392C27.4626 4.35422 26.8125 3.70406 26.0128 3.2966C25.1036 2.83337 23.9136 2.83337 21.5333 2.83337H12.4666C10.0864 2.83337 8.89629 2.83337 7.98717 3.2966C7.18747 3.70406 6.53731 4.35422 6.12985 5.15392C5.66663 6.06303 5.66663 7.25315 5.66663 9.63337V24.3667C5.66663 26.747 5.66663 27.937 6.12985 28.8462C6.53731 29.6459 7.18747 30.296 7.98717 30.7035C8.89629 31.1667 10.0864 31.1667 12.4666 31.1667H14.875M18.4166 15.5834H11.3333M15.5833 21.25H11.3333M22.6666 9.91671H11.3333M27.2708 24.0834V21.6042C27.2708 20.235 26.1608 19.125 24.7916 19.125C23.4224 19.125 22.3125 20.235 22.3125 21.6042V24.0834M22.1 29.75H27.4833C28.2768 29.75 28.6734 29.75 28.9765 29.5956C29.2431 29.4598 29.4597 29.2432 29.5955 28.9765C29.75 28.6735 29.75 28.2768 29.75 27.4834V26.35C29.75 25.5566 29.75 25.1599 29.5955 24.8569C29.4597 24.5903 29.2431 24.3736 28.9765 24.2378C28.6734 24.0834 28.2768 24.0834 27.4833 24.0834H22.1C21.3065 24.0834 20.9098 24.0834 20.6068 24.2378C20.3402 24.3736 20.1236 24.5903 19.9877 24.8569C19.8333 25.1599 19.8333 25.5566 19.8333 26.35V27.4834C19.8333 28.2768 19.8333 28.6735 19.9877 28.9765C20.1236 29.2432 20.3402 29.4598 20.6068 29.5956C20.9098 29.75 21.3065 29.75 22.1 29.75Z"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Contracts</p>}
          </Link>
        </div>

        <div
          className={` mt-2 ${location.pathname.includes("bills") ? styles.active : ""}`}
          onClick={() => setTab("bills")}
        >
          <Link to="/bills">
            <svg
              width="41"
              height="35"
              viewBox="0 0 41 41"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M15.375 17.9375L18.7917 21.3542L26.4792 13.6667M34.1667 35.875V13.325C34.1667 10.4547 34.1667 9.01959 33.6081 7.9233C33.1168 6.95896 32.3328 6.17494 31.3685 5.68359C30.272 5.125 28.837 5.125 25.9667 5.125H15.0334C12.1631 5.125 10.728 5.125 9.63168 5.68359C8.66734 6.17494 7.88332 6.95896 7.39197 7.9233C6.83337 9.01959 6.83337 10.4547 6.83337 13.325V35.875L11.5313 32.4583L15.8021 35.875L20.5 32.4583L25.198 35.875L29.4688 32.4583L34.1667 35.875Z"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Bills</p>}
          </Link>
        </div>

        <div
          className={` mt-2 ${location.pathname.includes("emp") ? styles.active : ""}`}
          onClick={() => setTab("emp")}
        >
          <Link to="/employees">
            <svg
              width="32"
              height="32"
              viewBox="0 0 32 32"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M29.3334 28V25.3333C29.3334 22.8483 27.6336 20.7601 25.3334 20.168M20.6667 4.38768C22.6212 5.17887 24 7.09508 24 9.33333C24 11.5716 22.6212 13.4879 20.6667 14.2789M22.6667 28C22.6667 25.5149 22.6667 24.2725 22.2607 23.2924C21.7194 21.9856 20.6811 20.9473 19.3743 20.406C18.3942 20 17.1518 20 14.6667 20H10.6667C8.18166 20 6.93915 20 5.95905 20.406C4.65222 20.9473 3.61397 21.9856 3.07266 23.2924C2.66669 24.2725 2.66669 25.5149 2.66669 28M18 9.33333C18 12.2789 15.6122 14.6667 12.6667 14.6667C9.72117 14.6667 7.33335 12.2789 7.33335 9.33333C7.33335 6.38781 9.72117 4 12.6667 4C15.6122 4 18 6.38781 18 9.33333Z"
                stroke="black"
                stroke-width="3.33"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Employees</p>}
          </Link>
        </div>

        <div
          className={` mt-2 ${location.pathname.includes("apps") ? styles.active : ""}`}
          onClick={() => setTab("apps")}
        >
          <Link to="/apps">
            <svg
              width="34"
              height="34"
              viewBox="0 0 34 34"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2 12H32M10 2H24C26.8003 2 28.2004 2 29.27 2.54497C30.2108 3.02433 30.9757 3.78924 31.455 4.73005C32 5.79961 32 7.19974 32 10V24C32 26.8003 32 28.2004 31.455 29.27C30.9757 30.2108 30.2108 30.9757 29.27 31.455C28.2004 32 26.8003 32 24 32H10C7.19974 32 5.79961 32 4.73005 31.455C3.78924 30.9757 3.02433 30.2108 2.54497 29.27C2 28.2004 2 26.8003 2 24V10C2 7.19974 2 5.79961 2.54497 4.73005C3.02433 3.78924 3.78924 3.02433 4.73005 2.54497C5.79961 2 7.19974 2 10 2Z"
                stroke="black"
                stroke-width="3.33333"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>

            {hover && <p>Applications</p>}
          </Link>
        </div>

        <div
          className={`mt-1 ${location.pathname.includes("reimbursement") ? styles.active : ""} `}
          onClick={() => setTab("reimbursement")}
        >
          <Link to="/reimbursement">
            {" "}
            <svg
              width="35"
              height="35"
              viewBox="0 0 35 35"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g>
                <path
                  d="M8.27762 6.20774C14.006 1.51336 22.4716 1.84003 27.8193 7.18774C33.5141 12.8825 33.5141 22.1167 27.8193 27.8115C22.1245 33.5063 12.8903 33.5063 7.19554 27.8115C5.44783 26.0663 4.17247 23.9055 3.48931 21.532C2.80615 19.1586 2.7376 16.6504 3.29012 14.2432L3.40241 13.7867L6.22283 14.5304C5.52362 17.1879 5.78488 20.0069 6.96057 22.4906C8.13625 24.9743 10.1509 26.9633 12.6495 28.1071C15.148 29.2508 17.9701 29.4759 20.6184 28.7427C23.2667 28.0095 25.5712 26.3651 27.1257 24.0992C28.6803 21.8333 29.3852 19.0914 29.1161 16.3567C28.847 13.622 27.6213 11.07 25.6549 9.15051C23.6886 7.23104 21.1078 6.06725 18.3674 5.86425C15.627 5.66125 12.9029 6.43207 10.6751 8.04086L10.3543 8.28294L11.8374 9.76607L5.13491 11.3119L6.68075 4.6094L8.27762 6.20774ZM18.9657 8.74961V11.6663H22.6116V14.5829H14.5907C14.4085 14.5826 14.2328 14.6505 14.0981 14.7733C13.9635 14.896 13.8797 15.0648 13.8632 15.2462C13.8468 15.4277 13.8988 15.6088 14.0092 15.7537C14.1196 15.8987 14.2802 15.9971 14.4595 16.0296L14.5907 16.0413H20.4241C21.391 16.0413 22.3183 16.4254 23.0021 17.1091C23.6858 17.7928 24.0699 18.7202 24.0699 19.6871C24.0699 20.654 23.6858 21.5814 23.0021 22.2651C22.3183 22.9488 21.391 23.3329 20.4241 23.3329H18.9657V26.2496H16.0491V23.3329H12.4032V20.4163H20.4241C20.6063 20.4166 20.782 20.3487 20.9167 20.226C21.0513 20.1032 21.1351 19.9345 21.1516 19.753C21.1681 19.5715 21.116 19.3905 21.0056 19.2455C20.8953 19.1005 20.7346 19.0021 20.5553 18.9696L20.4241 18.9579H14.5907C13.6238 18.9579 12.6965 18.5738 12.0128 17.8901C11.329 17.2064 10.9449 16.279 10.9449 15.3121C10.9449 14.3452 11.329 13.4178 12.0128 12.7341C12.6965 12.0504 13.6238 11.6663 14.5907 11.6663H16.0491V8.74961H18.9657Z"
                  fill="black"
                />
              </g>
            </svg>
            {hover && <p>Reimbursement</p>}
          </Link>
        </div>

        {/* <div
          className={` mt-2 ${ location.pathname.includes("profile") ? styles.active : ""}`}
          onClick={() => setTab("profile")}
        >
          <svg
            width="37"
            height="37"
            viewBox="0 0 37 37"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.88155 30.4518L12.7741 24.5592M24.5592 24.5592L30.4518 30.4517M35.3333 18.6667C35.3333 27.8714 27.8714 35.3333 18.6667 35.3333C9.46192 35.3333 2 27.8714 2 18.6667C2 9.46192 9.46192 2 18.6667 2C27.8714 2 35.3333 9.46192 35.3333 18.6667ZM27 18.6667C27 23.269 23.269 27 18.6667 27C14.0643 27 10.3333 23.269 10.3333 18.6667C10.3333 14.0643 14.0643 10.3333 18.6667 10.3333C23.269 10.3333 27 14.0643 27 18.6667Z"
              stroke="black"
              stroke-width="3.33333"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>

          {hover && <p>Profile</p>}
        </div> */}

        {/* <div
          className={` mt-2 ${ location.pathname.includes("logout") ? styles.active : ""}`}
          onClick={() => setTab("logout")}
        >
          <svg
            width="37"
            height="37"
            viewBox="0 0 37 37"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4.20751 10.25C7.06043 5.31813 12.3927 2 18.5001 2C27.6127 2 35 9.38728 35 18.4999C35 27.6126 27.6127 34.9999 18.5001 34.9999C12.3927 34.9999 7.06043 31.6818 4.20751 26.7499M18.4999 25.0999L25.0999 18.4999M25.0999 18.4999L18.4999 11.9M25.0999 18.4999H2"
              stroke="black"
              stroke-width="3.33333"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>

          {hover && <p>Logout</p>}
        </div> */}
      </div>
    </>
  );
}

export default StoresNavBg;

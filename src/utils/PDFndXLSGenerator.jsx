import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";
import * as XLSX from "xlsx"; // <-- THIS is important
import { saveAs } from "file-saver";
import imageBase64 from "../images/feeds-croped.png";
import QRCode from "qrcode";


export const handleExportPDF = async (
  columns,
  data,
  title,
  grandTotal = null
) => {
  if (data.length === 0) return;

  const user = JSON.parse(localStorage.getItem("user"));
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();

  const currentDate = new Date();
  const formattedDate = currentDate.toLocaleString("en-IN", {
    timeZone: "Asia/Kolkata",
    hour12: true,
  });

  const qrText = `Generated by : ${user?.name}\nEmployee Id : ${user?.employeeId}\nGenerated at: ${formattedDate}`;
  const qrBase64 = await QRCode.toDataURL(qrText);

  // Prepare table data
  const modifiedColumns = [...columns];
  const modifiedData = data.map((row) => columns.map((col) => row[col]));

  // Add grand total row if applicable
  if (grandTotal !== null) {
    const emptyCells = Array(modifiedColumns.length - 2).fill("");
    modifiedData.push([...emptyCells, "Grand Total :", grandTotal.toFixed(2)]);
  }

  const drawFooterAndHeader = () => {
    const pageNumber = doc.internal.getCurrentPageInfo().pageNumber;
    const pageCount = doc.internal.getNumberOfPages();

    if (imageBase64) {
      doc.addImage(imageBase64, "PNG", 10, 10, 50, 20);
    }

    if (qrBase64) {
      doc.addImage(qrBase64, "PNG", pageWidth - 65, 10, 25, 25);
    }

    doc.setFontSize(16);
    doc.setTextColor(0, 0, 0);
    doc.text(title, pageWidth - 10, 25, { align: "right" });

    doc.setDrawColor(0);
    doc.setLineWidth(0.1);
    doc.setLineDashPattern([1, 0.5]);
    doc.line(10, 45, pageWidth - 10, 45);

    // Footer line
    doc.line(10, pageHeight - 30, pageWidth - 10, pageHeight - 30);

    const footerLines = [
      "Registered Address : Flat No. 203, Mar Homes, Annojiguda, Pocharam, Korremal, Hyderabad, Telangana, India - 500088.",
      "This is an electronically generated document, no signature is required.",
    ];
    doc.setFontSize(8);
    footerLines.forEach((line, i) => {
      doc.setTextColor(150);
      doc.text(line, pageWidth / 2, pageHeight - 22 + i * 4, {
        align: "center",
      });
    });

    doc.setTextColor("#a92427");
    doc.text(
      "Â© Kernn Automations Private Limited",
      pageWidth / 2,
      pageHeight - 22 + footerLines.length * 4,
      { align: "center" }
    );

    doc.setTextColor(0);
    doc.text(
      `Page ${pageNumber} of ${pageCount}`,
      pageWidth - 40,
      pageHeight - 10
    );
  };

  autoTable(doc, {
    headStyles: {
      fillColor: [0, 49, 118],
      textColor: [255, 255, 255],
      fontStyle: "bold",
      fontSize: 10,
    },
    bodyStyles: {
      textColor: [0, 0, 0],
      fontSize: 9,
    },
    head: [modifiedColumns],
    body: modifiedData,
    margin: { bottom: 40 },
    startY: 50,
    didDrawPage: drawFooterAndHeader,
  });

  doc.save(`${title}.pdf`);
};

export const handleExportExcel = (columns, data, title) => {
  if (data.length > 0) {
    console.log(data);
    const worksheetData = [
      columns,
      ...data.map((row) => columns.map((col) => row[col])),
    ];
    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");

    const excelBuffer = XLSX.write(workbook, {
      bookType: "xlsx",
      type: "array",
    });
    const dataBlob = new Blob([excelBuffer], {
      type: "application/octet-stream",
    });
    saveAs(dataBlob, `${title}.xlsx`);
  }
};
